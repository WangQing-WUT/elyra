{
  "type": "object",
  "properties": {
    "label": {
      "type": "string",
      "title": "Label",
      "description": "A custom label for the node."
    },
    "component_parameters": {
      "type": "object",
      "properties": {
        {% if component.input_properties|length > 0 %}
        "inputs_header": {
          "type": "null",
          "title": "Inputs",
          "description": "Input properties for this component.",
          "uihints": {
            "ui:field": "header"
          }
        },
        "cpu": {
          "type": "integer",
          "title": "CPU",
          "description": "For CPU-intensive workloads, you can choose more than 1 CPU (e.g. 1.5).",
          "minimum": 0
        },
        "gpu": {
          "type": "integer",
          "title": "GPU",
          "description": "For GPU-intensive workloads, you can choose more than 1 GPU. Must be an integer.",
          "minimum": 0
        },
        "memory": {
          "type": "integer",
          "title": "RAM(GB)",
          "description": "The total amount of RAM specified.",
          "minimum": 0
        },
        "npu310": {
          "type": "integer",
          "title": "Ascend310",
          "description": "For Ascend310-intensive workloads, you can choose more than 1 Ascend310 (e.g. 1.5).",
          "minimum": 0
        },
        "npu910": {
          "type": "integer",
          "title": "Ascend910",
          "description": "For Ascend910-intensive workloads, you can choose more than 1 Ascend910 (e.g. 1.5).",
          "minimum": 0
        },
        "node_selector": {
          "type": "array",
          "title": "Node Selector",
          "description": "Assign the pod to the node with <label-key>=<label-value>.",
          "items": {
            "type": "object",
						"properties": {
              "key": {
                "type": "string",
                "title": "label key"
              },
              "value": {
                "type": "string",
                "title": "label value"
              }
            }
          },
          "maxItems": "1"
        },
        {% for property in component.input_properties %}
        "{{ property.ref }}": {{ render_parameter_details(property) }},
        {% endfor %}
        {% endif %}
        {% if component.output_properties|length > 0 %}
        "outputs_header": {
          "type": "null",
          "title": "Outputs",
          "description": "Outputs produced by this component.",
          "uihints": {
            "ui:field": "header"
          }
        },
        {% for property in component.output_properties %}
        "{{ property.ref }}": {{ render_parameter_details(property) }},
        {% endfor %}
        {% endif %}
        {% if elyra_owned_parameters %}
        "additional_properties_header": {
          "type": "null",
          "title": "Additional Properties",
          "description": "Additional properties used by Elyra that are not given in the component definition.",
          "uihints": {
            "ui:field": "header"
          }
        },
        {% for property in elyra_owned_parameters %}
        "{{property.property_id}}": {{ property.get_schema()|tojson }}
          {% if loop.index != loop|length %}
          ,
          {% endif %}
        {% endfor %}
        {% endif %}
      },
      "required": [
      {% for property in component.required_properties %}
        "{{ property.ref }}"
          {% if loop.index != loop|length %}
          ,
          {% endif %}
      {% endfor %}
      ]
    }
  },
  "required": ["component_parameters"]
}
